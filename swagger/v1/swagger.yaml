---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/reservations":
    post:
      summary: Creates a reservation
      tags:
      - Reservations
      parameters: []
      responses:
        '201':
          description: reservation created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                room_id:
                  type: integer
                check_in:
                  type: string
                check_out:
                  type: string
              required:
              - user_id
              - room_id
              - check_in
              - check_out
  "/reservations/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves a reservation
      tags:
      - Reservations
      responses:
        '200':
          description: reservation found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  room_id:
                    type: integer
                  check_in:
                    type: string
                  check_out:
                    type: string
        '404':
          description: reservation not found
    put:
      summary: Updates a reservation
      tags:
      - Reservations
      parameters: []
      responses:
        '200':
          description: reservation updated
        '422':
          description: invalid request
        '404':
          description: reservation not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                room_id:
                  type: integer
                check_in:
                  type: string
                check_out:
                  type: string
              required:
              - user_id
              - room_id
              - check_in
              - check_out
    delete:
      summary: Deletes a reservation
      tags:
      - Reservations
      responses:
        '204':
          description: reservation deleted
        '404':
          description: reservation not found
  "/rooms":
    get:
      summary: Retrieves a list of rooms
      tags:
      - Rooms
      responses:
        '200':
          description: successful
    post:
      summary: Creates a room
      tags:
      - Rooms
      parameters: []
      responses:
        '201':
          description: room created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/room"
  "/rooms/{id}":
    get:
      summary: Retrieves a room
      tags:
      - Rooms
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: not found
    put:
      summary: Updates a room
      tags:
      - Rooms
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: room updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/room"
    delete:
      summary: Deletes a room
      tags:
      - Rooms
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: no content
        '404':
          description: not found
servers:
- url: http://localhost:3000/
  variables:
    defaultHost:
      default: www.example.com
